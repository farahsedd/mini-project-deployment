name: CI/CD Pipeline
on:
  push:
    branches:
      - master
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Build and push Docker image
      run: |
        docker build -t farahseddik/password-generator:latest .
        docker push farahseddik/password-generator:latest
    - name: Set up Kind
      run: |
        curl -Lo kind https://kind.sigs.k8s.io/dl/v0.19.0/kind-linux-amd64
        chmod +x kind
        mv kind /usr/local/bin/kind
        kind create cluster --name my-cluster
    - name: Deploy to local Kubernetes (Kind)
      run: |
        kubectl apply -f k8s/deployment.yaml
    - name: Expose Service
      run: kubectl apply -f k8s/service.yaml
    - name: Rollback deployment in case of failure
      if: failure()
      run: kubectl rollout undo deployment/password-generator
    - name: Record deployment frequency
      run: echo "Deployment occurred at $(date)" >> deployment-frequency.log
    - name: Record lead time
      run: echo "Deployment started at $(date)" >> lead-time.log
    - name: Calculate failure rate
      run: |
        if [ "$?" -ne 0 ]; then
          echo "Change failed" >> failure-rate.log
        else
          echo "Change successful" >> success-rate.log
        fi
    - name: Measure restore time
      run: |
        start_time=$(date +%s)
        # Trigger a rollback or fix the issue
        end_time=$(date +%s)
        restore_time=$((end_time - start_time))
        echo "Restore time: $restore_time seconds" >> restore-time.log
    - name: Upload DORA metrics logs
      uses: actions/upload-artifact@v3
      with:
        name: dora-metrics-logs
        path: |
          deployment-frequency.log
          lead-time.log
          failure-rate.log
          restore-time.log



